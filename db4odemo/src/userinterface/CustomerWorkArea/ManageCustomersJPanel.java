/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerWorkArea;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Role.CustomerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mhetr
 */
public class ManageCustomersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCustomersJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem ecosystem;
    private UserAccount userAccount;
    private Customer customerAccount;

    public ManageCustomersJPanel(JPanel userProcessContainer, EcoSystem ecosystem) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        populateCustomerTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnCreateCustomer = new javax.swing.JButton();
        lblManageCustInfo = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        scrollCustomerInfo = new javax.swing.JScrollPane();
        tblCustomers = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblNumber = new javax.swing.JLabel();
        txtNumber = new javax.swing.JTextField();
        lblCustomerInfo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));

        lblName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("Name:");

        lblUsername.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblUsername.setText("Username:");

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPassword.setText("Password:");

        txtName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        txtUsername.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        txtPassword.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        btnCreateCustomer.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCreateCustomer.setText("Create Customer");
        btnCreateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCustomerActionPerformed(evt);
            }
        });

        lblManageCustInfo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblManageCustInfo.setText("Manage Customer Information");

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblCustomers.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Username", "Password", "Address", "Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollCustomerInfo.setViewportView(tblCustomers);

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblAddress.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAddress.setText("Address:");

        txtAddress.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        lblNumber.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNumber.setText("Number:");

        txtNumber.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        lblCustomerInfo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCustomerInfo.setText("Customer Information");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(143, 143, 143)
                        .addComponent(lblManageCustInfo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblAddress)
                            .addGap(26, 26, 26)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblNumber)
                            .addGap(26, 26, 26)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblCustomerInfo)
                                .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 313, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(247, 247, 247)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(btnCreateCustomer))
                    .addComponent(scrollCustomerInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAddress, lblName, lblNumber, lblPassword, lblUsername});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAddress, txtName, txtNumber, txtPassword, txtUsername});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnSave, btnUpdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManageCustInfo)
                    .addComponent(btnBack))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumber)
                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCreateCustomer)
                .addGap(11, 11, 11)
                .addComponent(lblCustomerInfo)
                .addGap(18, 18, 18)
                .addComponent(scrollCustomerInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnSave))
                .addGap(44, 44, 44))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblAddress, lblName, lblNumber, lblPassword, lblUsername});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtAddress, txtName, txtNumber, txtPassword, txtUsername});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnSave, btnUpdate});

    }// </editor-fold>//GEN-END:initComponents

    // Below function is used for populating Customer Informtion in a tablular format
    public void populateCustomerTable() {
        DefaultTableModel customerModel = (DefaultTableModel) tblCustomers.getModel();
        customerModel.setRowCount(0);
        for (Customer customer : ecosystem.getCustomerDirectory().getCustomerList()) {
            Object[] row = new Object[5];
            row[0] = customer.getName();
            row[1] = customer.getUsername();
            row[2] = customer.getPassword();
            row[3] = customer.getAddress();
            row[4] = customer.getNumber();
            customerModel.addRow(row);
        }
    }

    private void btnCreateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCustomerActionPerformed
        // TODO add your handling code here:
        if (txtName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Name cannot be empty.");
            return;
        }
        if (txtUsername.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username cannot be empty.");
            return;
        }
        if (txtPassword.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Password cannot be empty.");
            return;
        }
        if (txtAddress.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Adress cannot be empty.");
            return;
        } else if (txtNumber.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Phone number cannot be empty.");
            return;
        }
        String numberFormat = "^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$";
        if (Pattern.compile(numberFormat).matcher(txtNumber.getText()).matches()) {
            System.out.println("Phone number entered is correct.");
        } else {
            JOptionPane.showMessageDialog(this, "Phone Number entered is not proper, please enter the number in correct format.");
            return;
        }

        if (ecosystem.getUserAccountDirectory().checkIfUsernameIsUnique(txtUsername.getText())) {
            UserAccount userAccount = ecosystem.getUserAccountDirectory().createUserAccount(txtName.getText(), txtUsername.getText(), txtPassword.getText(), null, new CustomerRole());
            Customer customer = ecosystem.getCustomerDirectory().createCustomer(txtName.getText(), txtUsername.getText(), txtPassword.getText(), txtAddress.getText(), txtNumber.getText());
            populateCustomerTable();
            txtName.setText("");
            txtUsername.setText("");
            txtPassword.setText("");
            txtAddress.setText("");
            txtNumber.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Please enter a unique Username.");
        }
    }//GEN-LAST:event_btnCreateCustomerActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:        
        int selectedRow = tblCustomers.getSelectedRow();
        if (selectedRow >= 0) {
            String name = (String) tblCustomers.getValueAt(selectedRow, 0);
            String username = (String) tblCustomers.getValueAt(selectedRow, 1);
            String password = (String) tblCustomers.getValueAt(selectedRow, 2);
            String address = (String) tblCustomers.getValueAt(selectedRow, 3);
            String number = (String) tblCustomers.getValueAt(selectedRow, 4);
            userAccount = ecosystem.getUserAccountDirectory().authenticateUser(username, password);
            customerAccount = ecosystem.getCustomerDirectory().getCustomer(username);
            txtName.setText(name + "");
            txtUsername.setText(username + "");
            txtPassword.setText(password + "");
            txtAddress.setText(address + "");
            txtNumber.setText(number + "");
            JOptionPane.showMessageDialog(null, "Please click on the Save button to update the changes.");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to update the Customer.");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCustomers.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_CANCEL_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Do you want to Delete the selected User Account?", "warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                String name = (String) tblCustomers.getValueAt(selectedRow, 0);
                String username = (String) tblCustomers.getValueAt(selectedRow, 1);
                String password = (String) tblCustomers.getValueAt(selectedRow, 2);
                String address = (String) tblCustomers.getValueAt(selectedRow, 3);
                String number = (String) tblCustomers.getValueAt(selectedRow, 4);
                UserAccount userAccount = ecosystem.getUserAccountDirectory().authenticateUser(username, password);
                Customer customerAccount = ecosystem.getCustomerDirectory().getCustomer(username);
                ecosystem.getUserAccountDirectory().deleteUserAccount(userAccount);
                ecosystem.getCustomerDirectory().deleteCustomer(customerAccount.getUsername());
                populateCustomerTable();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete the Customer.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (txtName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Name cannot be empty.");
            return;
        }
        if (txtUsername.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username cannot be empty.");
            return;
        }
        if (txtPassword.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Password cannot be empty.");
            return;
        }
        if (txtAddress.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Adress cannot be empty.");
            return;
        } else if (txtNumber.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Phone number cannot be empty.");
            return;
        }
        String numberFormat = "^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$";
        if (Pattern.compile(numberFormat).matcher(txtNumber.getText()).matches()) {
            System.out.println("Phone number entered is correct.");
        } else {
            JOptionPane.showMessageDialog(this, "Phone Number entered is not proper, please enter the number in correct format.");
            return;
        }
        
        ecosystem.getUserAccountDirectory().saveUserAccount(userAccount, txtName.getText(), txtUsername.getText(), txtPassword.getText());
        ecosystem.getCustomerDirectory().updateCustomer(customerAccount, txtName.getText(), txtUsername.getText(), txtPassword.getText(), txtAddress.getText(), txtNumber.getText());
        populateCustomerTable();
        txtName.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
        txtAddress.setText("");
        txtNumber.setText("");
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateCustomer;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCustomerInfo;
    private javax.swing.JLabel lblManageCustInfo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JScrollPane scrollCustomerInfo;
    private javax.swing.JTable tblCustomers;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumber;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
